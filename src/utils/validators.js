/**
 * 验证密码强度
 * 新规则：
 * 1. 最小长度 12 位
 * 2. 必须包含至少一个大写字母
 * 3. 必须包含至少一个小写字母
 * 4. 必须包含至少一个数字
 * 5. 必须包含至少一个常见特殊符号
 */
export function isStrongPassword(password) {
    // 正则表达式解释:
    // ^                    - 字符串开头
    // (?=.*[a-z])          - "正向先行断言"，表示后面必须至少有一个小写字母
    // (?=.*[A-Z])          - 必须至少有一个大写字母
    // (?=.*\d)             - 必须至少有一个数字
    // (?=.*[@$!%*?&.])   - 必须至少有一个指定的特殊符号
    // [A-Za-z\d@$!%*?&.]{12,} - 密码本身由这些允许的字符组成，且最小长度为12
    // $                    - 字符串结尾
    const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&.])[A-Za-z\d@$!%*?&.]{12,}$/;
    return regex.test(password);
}

// 更新对应的提示信息
export const PASSWORD_RULE_MESSAGE = "密码最少需要 12 个字符，且必须同时包含大写字母、小写字母、数字和特殊符号(@$!%*?&.)。";